name: Lint

permissions:
  contents: read
  pull-requests: read

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  Lint:
    name: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction --with dev
        env:
          PYTHON_TOKEN: ${{ secrets.PYTHON_TOKEN }}
          PYTHONIOENCODING: utf8
      - name: Testing
        run: |
          source .venv/bin/activate
          black --check --target-version=py39 src/*
          pylint src/* --exit-zero
          pytest -v src/